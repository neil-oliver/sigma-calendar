{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useActionEffect = exports.useActionTrigger = exports.useInteraction = exports.useVariable = exports.useConfig = exports.usePaginatedElementData = exports.useElementData = exports.useElementColumns = exports.useLoadingState = exports.useEditorPanelConfig = exports.usePlugin = void 0;\nconst react_1 = require(\"react\");\nconst Context_1 = require(\"./Context\");\nconst deepEqual_1 = require(\"../utils/deepEqual\");\n/**\n * Gets the entire plugin instance\n * @returns {PluginInstance} Context for the current plugin instance\n */\nfunction usePlugin() {\n  return (0, react_1.useContext)(Context_1.PluginContext);\n}\nexports.usePlugin = usePlugin;\n/**\n * Provides a setter for the Plugin's Config Options\n * @param {CustomPluginConfigOptions[]} nextOptions Updated possible Config Options\n */\nfunction useEditorPanelConfig(nextOptions) {\n  const client = usePlugin();\n  const optionsRef = (0, react_1.useRef)({});\n  (0, react_1.useEffect)(() => {\n    if (nextOptions == null) return;\n    if (!(0, deepEqual_1.deepEqual)(nextOptions, optionsRef.current)) {\n      client.config.configureEditorPanel(nextOptions);\n      optionsRef.current = nextOptions;\n    }\n  }, [client, nextOptions]);\n}\nexports.useEditorPanelConfig = useEditorPanelConfig;\n/**\n * React hook for Plugin Config loading state\n * @param {boolean} initialState Initial value to set loading state to\n * @returns {[boolean, Function]} Boolean value corresponding to loading state for plugin config and setter for loading state\n */\nfunction useLoadingState(initialState) {\n  const client = usePlugin();\n  const [loading, setLoading] = (0, react_1.useState)(() => {\n    client.config.setLoadingState(initialState);\n    return initialState;\n  });\n  return [loading, nextState => {\n    if (nextState === loading) return;\n    setLoading(nextState);\n    client.config.setLoadingState(nextState);\n  }];\n}\nexports.useLoadingState = useLoadingState;\n/**\n * Provides the latest column values from corresponding config element\n * @param {string} configId ID from the config for fetching element columns, with type: 'element'\n * @returns {WorkbookElementColumns} Values of corresponding columns contained\n * within the config element\n */\nfunction useElementColumns(configId) {\n  const client = usePlugin();\n  const [columns, setColumns] = (0, react_1.useState)({});\n  (0, react_1.useEffect)(() => {\n    if (configId) {\n      return client.elements.subscribeToElementColumns(configId, setColumns);\n    }\n  }, [client, configId]);\n  return columns;\n}\nexports.useElementColumns = useElementColumns;\n/**\n * Provides the latest data values from config element (max 25_000)\n * @param {string} configId ID from the config for fetching element data, with type: 'element'\n * @returns {WorkbookElementData} Element Data for config element, if any\n */\nfunction useElementData(configId) {\n  const client = usePlugin();\n  const [data, setData] = (0, react_1.useState)({});\n  (0, react_1.useEffect)(() => {\n    if (configId) {\n      return client.elements.subscribeToElementData(configId, setData);\n    }\n  }, [client, configId]);\n  return data;\n}\nexports.useElementData = useElementData;\n/**\n * Provides the latest data values from corresponding config element with a callback to\n * fetch more in chunks of 25_000 data points\n * @param {string} configId ID from the config for fetching paginated\n * element data, with type: 'element'\n * @returns {WorkbookElementData} Element Data for configured config element, if any\n */\nfunction usePaginatedElementData(configId) {\n  const client = usePlugin();\n  const [data, setData] = (0, react_1.useState)({});\n  const loadMore = (0, react_1.useCallback)(() => {\n    if (configId) {\n      client.elements.fetchMoreElementData(configId);\n    }\n  }, [configId]);\n  (0, react_1.useEffect)(() => {\n    if (configId) {\n      return client.elements.subscribeToElementData(configId, setData);\n    }\n  }, [client, configId]);\n  return [data, loadMore];\n}\nexports.usePaginatedElementData = usePaginatedElementData;\n/**\n * Provides the latest value for entire config or certain key within the config\n * @param {string} key Key within Plugin Config, optional\n * @returns Entire config if no key passed in or value for key within plugin config\n */\nfunction useConfig(key) {\n  const client = usePlugin();\n  const [config, setConfig] = (0, react_1.useState)(key != null ? client.config.getKey(key) : client.config.get());\n  (0, react_1.useEffect)(() => client.config.subscribe(newConfig => {\n    if (key != null && newConfig[key] !== config[key]) {\n      setConfig(newConfig[key]);\n    } else {\n      setConfig(newConfig);\n    }\n  }), [client]);\n  return config;\n}\nexports.useConfig = useConfig;\n/**\n * React hook for accessing a workbook control variable\n * @param {string} id ID from the config of type: 'variable'\n * @returns {[(WorkbookVariable | undefined), Function]} Constantly updating\n * value of the control variable and setter for the variable\n */\nfunction useVariable(id) {\n  const client = usePlugin();\n  const [workbookVariable, setWorkbookVariable] = (0, react_1.useState)();\n  const isFirstRender = (0, react_1.useRef)(true);\n  (0, react_1.useEffect)(() => {\n    if (isFirstRender.current) {\n      setWorkbookVariable(client.config.getVariable(id));\n      isFirstRender.current = false;\n    }\n    return client.config.subscribeToWorkbookVariable(id, setWorkbookVariable);\n  }, [client, id]);\n  const setVariable = (0, react_1.useCallback)((...values) => client.config.setVariable(id, ...values), [id]);\n  return [workbookVariable, setVariable];\n}\nexports.useVariable = useVariable;\n/**\n * @deprecated Use Action API instead\n * React hook for accessing a workbook interaction selections state\n * @param {string} id ID from the config of type: 'interaction'\n * @returns {[(WorkbookSelection | undefined), Function]} Constantly updating selection state and setter thereof\n */\nfunction useInteraction(id, elementId) {\n  const client = usePlugin();\n  const [workbookInteraction, setWorkbookInteraction] = (0, react_1.useState)();\n  (0, react_1.useEffect)(() => {\n    return client.config.subscribeToWorkbookInteraction(id, setWorkbookInteraction);\n  }, [client, id]);\n  const setInteraction = (0, react_1.useCallback)(value => {\n    client.config.setInteraction(id, elementId, value);\n  }, [id]);\n  return [workbookInteraction, setInteraction];\n}\nexports.useInteraction = useInteraction;\n/**\n * React hook for returning a triggering callback function for the registered\n * action trigger\n * @param {string} configId ID from the config of type: 'action-trigger'\n * @returns {Function} A callback function to trigger the action\n */\nfunction useActionTrigger(configId) {\n  const client = usePlugin();\n  return (0, react_1.useCallback)(() => {\n    client.config.triggerAction(configId);\n  }, [client, configId]);\n}\nexports.useActionTrigger = useActionTrigger;\n/**\n * React hook for registering and unregistering an action effect\n * @param {string} configId ID from the config of type: 'action-effect'\n * @param {Function} effect The function to be called when the action is triggered\n */\nfunction useActionEffect(configId, effect) {\n  const client = usePlugin();\n  const effectRef = (0, react_1.useRef)(effect);\n  (0, react_1.useEffect)(() => {\n    effectRef.current = effect;\n  });\n  (0, react_1.useEffect)(() => {\n    return client.config.registerEffect(configId, effectRef.current);\n  }, [client, configId, effect]);\n}\nexports.useActionEffect = useActionEffect;","map":{"version":3,"names":["Object","defineProperty","exports","value","useActionEffect","useActionTrigger","useInteraction","useVariable","useConfig","usePaginatedElementData","useElementData","useElementColumns","useLoadingState","useEditorPanelConfig","usePlugin","react_1","require","Context_1","deepEqual_1","useContext","PluginContext","nextOptions","client","optionsRef","useRef","useEffect","deepEqual","current","config","configureEditorPanel","initialState","loading","setLoading","useState","setLoadingState","nextState","configId","columns","setColumns","elements","subscribeToElementColumns","data","setData","subscribeToElementData","loadMore","useCallback","fetchMoreElementData","key","setConfig","getKey","get","subscribe","newConfig","id","workbookVariable","setWorkbookVariable","isFirstRender","getVariable","subscribeToWorkbookVariable","setVariable","values","elementId","workbookInteraction","setWorkbookInteraction","subscribeToWorkbookInteraction","setInteraction","triggerAction","effect","effectRef","registerEffect"],"sources":["/Users/neil/Documents/GitHub/sigma-calendar/sigma-calendar/node_modules/@sigmacomputing/plugin/dist/react/hooks.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useActionEffect = exports.useActionTrigger = exports.useInteraction = exports.useVariable = exports.useConfig = exports.usePaginatedElementData = exports.useElementData = exports.useElementColumns = exports.useLoadingState = exports.useEditorPanelConfig = exports.usePlugin = void 0;\nconst react_1 = require(\"react\");\nconst Context_1 = require(\"./Context\");\nconst deepEqual_1 = require(\"../utils/deepEqual\");\n/**\n * Gets the entire plugin instance\n * @returns {PluginInstance} Context for the current plugin instance\n */\nfunction usePlugin() {\n    return (0, react_1.useContext)(Context_1.PluginContext);\n}\nexports.usePlugin = usePlugin;\n/**\n * Provides a setter for the Plugin's Config Options\n * @param {CustomPluginConfigOptions[]} nextOptions Updated possible Config Options\n */\nfunction useEditorPanelConfig(nextOptions) {\n    const client = usePlugin();\n    const optionsRef = (0, react_1.useRef)({});\n    (0, react_1.useEffect)(() => {\n        if (nextOptions == null)\n            return;\n        if (!(0, deepEqual_1.deepEqual)(nextOptions, optionsRef.current)) {\n            client.config.configureEditorPanel(nextOptions);\n            optionsRef.current = nextOptions;\n        }\n    }, [client, nextOptions]);\n}\nexports.useEditorPanelConfig = useEditorPanelConfig;\n/**\n * React hook for Plugin Config loading state\n * @param {boolean} initialState Initial value to set loading state to\n * @returns {[boolean, Function]} Boolean value corresponding to loading state for plugin config and setter for loading state\n */\nfunction useLoadingState(initialState) {\n    const client = usePlugin();\n    const [loading, setLoading] = (0, react_1.useState)(() => {\n        client.config.setLoadingState(initialState);\n        return initialState;\n    });\n    return [\n        loading,\n        nextState => {\n            if (nextState === loading)\n                return;\n            setLoading(nextState);\n            client.config.setLoadingState(nextState);\n        },\n    ];\n}\nexports.useLoadingState = useLoadingState;\n/**\n * Provides the latest column values from corresponding config element\n * @param {string} configId ID from the config for fetching element columns, with type: 'element'\n * @returns {WorkbookElementColumns} Values of corresponding columns contained\n * within the config element\n */\nfunction useElementColumns(configId) {\n    const client = usePlugin();\n    const [columns, setColumns] = (0, react_1.useState)({});\n    (0, react_1.useEffect)(() => {\n        if (configId) {\n            return client.elements.subscribeToElementColumns(configId, setColumns);\n        }\n    }, [client, configId]);\n    return columns;\n}\nexports.useElementColumns = useElementColumns;\n/**\n * Provides the latest data values from config element (max 25_000)\n * @param {string} configId ID from the config for fetching element data, with type: 'element'\n * @returns {WorkbookElementData} Element Data for config element, if any\n */\nfunction useElementData(configId) {\n    const client = usePlugin();\n    const [data, setData] = (0, react_1.useState)({});\n    (0, react_1.useEffect)(() => {\n        if (configId) {\n            return client.elements.subscribeToElementData(configId, setData);\n        }\n    }, [client, configId]);\n    return data;\n}\nexports.useElementData = useElementData;\n/**\n * Provides the latest data values from corresponding config element with a callback to\n * fetch more in chunks of 25_000 data points\n * @param {string} configId ID from the config for fetching paginated\n * element data, with type: 'element'\n * @returns {WorkbookElementData} Element Data for configured config element, if any\n */\nfunction usePaginatedElementData(configId) {\n    const client = usePlugin();\n    const [data, setData] = (0, react_1.useState)({});\n    const loadMore = (0, react_1.useCallback)(() => {\n        if (configId) {\n            client.elements.fetchMoreElementData(configId);\n        }\n    }, [configId]);\n    (0, react_1.useEffect)(() => {\n        if (configId) {\n            return client.elements.subscribeToElementData(configId, setData);\n        }\n    }, [client, configId]);\n    return [data, loadMore];\n}\nexports.usePaginatedElementData = usePaginatedElementData;\n/**\n * Provides the latest value for entire config or certain key within the config\n * @param {string} key Key within Plugin Config, optional\n * @returns Entire config if no key passed in or value for key within plugin config\n */\nfunction useConfig(key) {\n    const client = usePlugin();\n    const [config, setConfig] = (0, react_1.useState)(key != null ? client.config.getKey(key) : client.config.get());\n    (0, react_1.useEffect)(() => client.config.subscribe(newConfig => {\n        if (key != null && newConfig[key] !== config[key]) {\n            setConfig(newConfig[key]);\n        }\n        else {\n            setConfig(newConfig);\n        }\n    }), [client]);\n    return config;\n}\nexports.useConfig = useConfig;\n/**\n * React hook for accessing a workbook control variable\n * @param {string} id ID from the config of type: 'variable'\n * @returns {[(WorkbookVariable | undefined), Function]} Constantly updating\n * value of the control variable and setter for the variable\n */\nfunction useVariable(id) {\n    const client = usePlugin();\n    const [workbookVariable, setWorkbookVariable] = (0, react_1.useState)();\n    const isFirstRender = (0, react_1.useRef)(true);\n    (0, react_1.useEffect)(() => {\n        if (isFirstRender.current) {\n            setWorkbookVariable(client.config.getVariable(id));\n            isFirstRender.current = false;\n        }\n        return client.config.subscribeToWorkbookVariable(id, setWorkbookVariable);\n    }, [client, id]);\n    const setVariable = (0, react_1.useCallback)((...values) => client.config.setVariable(id, ...values), [id]);\n    return [workbookVariable, setVariable];\n}\nexports.useVariable = useVariable;\n/**\n * @deprecated Use Action API instead\n * React hook for accessing a workbook interaction selections state\n * @param {string} id ID from the config of type: 'interaction'\n * @returns {[(WorkbookSelection | undefined), Function]} Constantly updating selection state and setter thereof\n */\nfunction useInteraction(id, elementId) {\n    const client = usePlugin();\n    const [workbookInteraction, setWorkbookInteraction] = (0, react_1.useState)();\n    (0, react_1.useEffect)(() => {\n        return client.config.subscribeToWorkbookInteraction(id, setWorkbookInteraction);\n    }, [client, id]);\n    const setInteraction = (0, react_1.useCallback)((value) => {\n        client.config.setInteraction(id, elementId, value);\n    }, [id]);\n    return [workbookInteraction, setInteraction];\n}\nexports.useInteraction = useInteraction;\n/**\n * React hook for returning a triggering callback function for the registered\n * action trigger\n * @param {string} configId ID from the config of type: 'action-trigger'\n * @returns {Function} A callback function to trigger the action\n */\nfunction useActionTrigger(configId) {\n    const client = usePlugin();\n    return (0, react_1.useCallback)(() => {\n        client.config.triggerAction(configId);\n    }, [client, configId]);\n}\nexports.useActionTrigger = useActionTrigger;\n/**\n * React hook for registering and unregistering an action effect\n * @param {string} configId ID from the config of type: 'action-effect'\n * @param {Function} effect The function to be called when the action is triggered\n */\nfunction useActionEffect(configId, effect) {\n    const client = usePlugin();\n    const effectRef = (0, react_1.useRef)(effect);\n    (0, react_1.useEffect)(() => {\n        effectRef.current = effect;\n    });\n    (0, react_1.useEffect)(() => {\n        return client.config.registerEffect(configId, effectRef.current);\n    }, [client, configId, effect]);\n}\nexports.useActionEffect = useActionEffect;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}