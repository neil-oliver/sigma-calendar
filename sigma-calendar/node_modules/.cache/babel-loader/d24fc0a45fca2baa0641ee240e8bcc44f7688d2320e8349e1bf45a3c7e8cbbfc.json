{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialize = void 0;\nconst error_1 = require(\"../error\");\nfunction initialize() {\n  const pluginConfig = {\n    config: {}\n  };\n  let subscribedInteractions = {};\n  let subscribedWorkbookVars = {};\n  const registeredEffects = {};\n  const listeners = {};\n  for (const [key, value] of new URL(document.location.toString()).searchParams.entries()) pluginConfig[key] = JSON.parse(value);\n  const listener = e => {\n    emit(e.data.type, e.data.result, e.data.error);\n  };\n  window.addEventListener('message', listener, false);\n  window.addEventListener('click', () => execPromise('wb:plugin:focus'));\n  on('wb:plugin:config:update', config => {\n    var _a;\n    Object.assign(pluginConfig, config);\n    emit('config', (_a = pluginConfig.config) !== null && _a !== void 0 ? _a : {});\n  });\n  // send initialize event\n  void execPromise('wb:plugin:init', require('../../package.json').version).then(config => {\n    Object.assign(pluginConfig, config);\n    emit('init', pluginConfig);\n    emit('config', pluginConfig.config);\n  });\n  on('wb:plugin:variable:update', updatedVariables => {\n    subscribedWorkbookVars = {};\n    Object.assign(subscribedWorkbookVars, updatedVariables);\n  });\n  on('wb:plugin:selection:update', updatedInteractions => {\n    subscribedInteractions = {};\n    Object.assign(subscribedInteractions, updatedInteractions);\n  });\n  on('wb:plugin:action-effect:invoke', configId => {\n    const effect = registeredEffects[configId];\n    if (!effect) {\n      throw new Error(`Unknown action effect with name: ${configId}`);\n    }\n    effect();\n  });\n  function on(event, listener) {\n    listeners[event] = listeners[event] || [];\n    listeners[event].push(listener);\n  }\n  function off(event, listener) {\n    if (listeners[event] == null) return;\n    listeners[event] = listeners[event].filter(a => a !== listener);\n  }\n  function emit(event, ...args) {\n    Object.values(listeners[event] || []).forEach(fn => fn(...args));\n  }\n  function execPromise(event, ...args) {\n    return new Promise((resolve, reject) => {\n      var _a;\n      const callback = (data, error) => {\n        if (error) reject(error);else resolve(data);\n        off(event, callback);\n      };\n      on(event, callback);\n      window.parent.postMessage({\n        type: event,\n        args,\n        elementId: pluginConfig.id\n      }, (_a = pluginConfig === null || pluginConfig === void 0 ? void 0 : pluginConfig.wbOrigin) !== null && _a !== void 0 ? _a : '*');\n    });\n  }\n  return {\n    get sigmaEnv() {\n      return pluginConfig.sigmaEnv;\n    },\n    get isScreenshot() {\n      return pluginConfig.screenshot;\n    },\n    config: {\n      // @ts-ignore\n      getKey(key) {\n        var _a;\n        return (_a = pluginConfig === null || pluginConfig === void 0 ? void 0 : pluginConfig.config) === null || _a === void 0 ? void 0 : _a[key];\n      },\n      get() {\n        return pluginConfig.config;\n      },\n      set(partialConfig) {\n        void execPromise('wb:plugin:config:update', partialConfig);\n      },\n      setKey(key, value) {\n        void execPromise('wb:plugin:config:update', {\n          [key]: value\n        });\n      },\n      subscribe(listener) {\n        on('config', listener);\n        return () => off('config', listener);\n      },\n      getVariable(configId) {\n        (0, error_1.validateConfigId)(configId, 'variable');\n        return subscribedWorkbookVars[configId];\n      },\n      setVariable(configId, ...values) {\n        (0, error_1.validateConfigId)(configId, 'variable');\n        void execPromise('wb:plugin:variable:set', configId, ...values);\n      },\n      getInteraction(configId) {\n        (0, error_1.validateConfigId)(configId, 'interaction');\n        return subscribedInteractions[configId];\n      },\n      setInteraction(configId, elementId, selection) {\n        (0, error_1.validateConfigId)(configId, 'interaction');\n        void execPromise('wb:plugin:selection:set', configId, elementId, selection);\n      },\n      triggerAction(configId) {\n        (0, error_1.validateConfigId)(configId, 'action-trigger');\n        void execPromise('wb:plugin:action-trigger:invoke', configId);\n      },\n      registerEffect(configId, effect) {\n        (0, error_1.validateConfigId)(configId, 'action-effect');\n        registeredEffects[configId] = effect;\n        return () => {\n          delete registeredEffects[configId];\n        };\n      },\n      configureEditorPanel(options) {\n        void execPromise('wb:plugin:config:inspector', options);\n      },\n      setLoadingState(loadingState) {\n        void execPromise('wb:plugin:config:loading-state', loadingState);\n      },\n      subscribeToWorkbookVariable(configId, callback) {\n        (0, error_1.validateConfigId)(configId, 'variable');\n        const setValues = values => {\n          callback(values[configId]);\n        };\n        on('wb:plugin:variable:update', setValues);\n        return () => {\n          off('wb:plugin:variable:update', setValues);\n        };\n      },\n      subscribeToWorkbookInteraction(configId, callback) {\n        (0, error_1.validateConfigId)(configId, 'interaction');\n        const setValues = values => {\n          callback(values[configId]);\n        };\n        on('wb:plugin:selection:update', setValues);\n        return () => {\n          off('wb:plugin:selection:update', setValues);\n        };\n      }\n    },\n    elements: {\n      getElementColumns(configId) {\n        (0, error_1.validateConfigId)(configId, 'element');\n        return execPromise('wb:plugin:element:columns:get', configId);\n      },\n      subscribeToElementColumns(configId, callback) {\n        (0, error_1.validateConfigId)(configId, 'element');\n        const eventName = `wb:plugin:element:${configId}:columns`;\n        on(eventName, callback);\n        void execPromise('wb:plugin:element:subscribe:columns', configId);\n        return () => {\n          off(eventName, callback);\n          void execPromise('wb:plugin:element:unsubscribe:columns', configId);\n        };\n      },\n      subscribeToElementData(configId, callback) {\n        (0, error_1.validateConfigId)(configId, 'element');\n        const eventName = `wb:plugin:element:${configId}:data`;\n        on(eventName, callback);\n        void execPromise('wb:plugin:element:subscribe:data', configId);\n        return () => {\n          off(eventName, callback);\n          void execPromise('wb:plugin:element:unsubscribe:data', configId);\n        };\n      },\n      fetchMoreElementData(configId) {\n        (0, error_1.validateConfigId)(configId, 'element');\n        void execPromise('wb:plugin:element:fetch-more', configId);\n      }\n    },\n    destroy() {\n      Object.keys(listeners).forEach(event => delete listeners[event]);\n      window.removeEventListener('message', listener, false);\n    }\n  };\n}\nexports.initialize = initialize;","map":{"version":3,"names":["Object","defineProperty","exports","value","initialize","error_1","require","pluginConfig","config","subscribedInteractions","subscribedWorkbookVars","registeredEffects","listeners","key","URL","document","location","toString","searchParams","entries","JSON","parse","listener","e","emit","data","type","result","error","window","addEventListener","execPromise","on","_a","assign","version","then","updatedVariables","updatedInteractions","configId","effect","Error","event","push","off","filter","a","args","values","forEach","fn","Promise","resolve","reject","callback","parent","postMessage","elementId","id","wbOrigin","sigmaEnv","isScreenshot","screenshot","getKey","get","set","partialConfig","setKey","subscribe","getVariable","validateConfigId","setVariable","getInteraction","setInteraction","selection","triggerAction","registerEffect","configureEditorPanel","options","setLoadingState","loadingState","subscribeToWorkbookVariable","setValues","subscribeToWorkbookInteraction","elements","getElementColumns","subscribeToElementColumns","eventName","subscribeToElementData","fetchMoreElementData","destroy","keys","removeEventListener"],"sources":["/Users/neil/Documents/GitHub/sigma-calendar/sigma-calendar/node_modules/@sigmacomputing/plugin/dist/client/initialize.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initialize = void 0;\nconst error_1 = require(\"../error\");\nfunction initialize() {\n    const pluginConfig = {\n        config: {},\n    };\n    let subscribedInteractions = {};\n    let subscribedWorkbookVars = {};\n    const registeredEffects = {};\n    const listeners = {};\n    for (const [key, value] of new URL(document.location.toString()).searchParams.entries())\n        pluginConfig[key] = JSON.parse(value);\n    const listener = (e) => {\n        emit(e.data.type, e.data.result, e.data.error);\n    };\n    window.addEventListener('message', listener, false);\n    window.addEventListener('click', () => execPromise('wb:plugin:focus'));\n    on('wb:plugin:config:update', (config) => {\n        var _a;\n        Object.assign(pluginConfig, config);\n        emit('config', (_a = pluginConfig.config) !== null && _a !== void 0 ? _a : {});\n    });\n    // send initialize event\n    void execPromise('wb:plugin:init', require('../../package.json').version).then(config => {\n        Object.assign(pluginConfig, config);\n        emit('init', pluginConfig);\n        emit('config', pluginConfig.config);\n    });\n    on('wb:plugin:variable:update', (updatedVariables) => {\n        subscribedWorkbookVars = {};\n        Object.assign(subscribedWorkbookVars, updatedVariables);\n    });\n    on('wb:plugin:selection:update', (updatedInteractions) => {\n        subscribedInteractions = {};\n        Object.assign(subscribedInteractions, updatedInteractions);\n    });\n    on('wb:plugin:action-effect:invoke', (configId) => {\n        const effect = registeredEffects[configId];\n        if (!effect) {\n            throw new Error(`Unknown action effect with name: ${configId}`);\n        }\n        effect();\n    });\n    function on(event, listener) {\n        listeners[event] = listeners[event] || [];\n        listeners[event].push(listener);\n    }\n    function off(event, listener) {\n        if (listeners[event] == null)\n            return;\n        listeners[event] = listeners[event].filter(a => a !== listener);\n    }\n    function emit(event, ...args) {\n        Object.values(listeners[event] || []).forEach(fn => fn(...args));\n    }\n    function execPromise(event, ...args) {\n        return new Promise((resolve, reject) => {\n            var _a;\n            const callback = (data, error) => {\n                if (error)\n                    reject(error);\n                else\n                    resolve(data);\n                off(event, callback);\n            };\n            on(event, callback);\n            window.parent.postMessage({ type: event, args, elementId: pluginConfig.id }, (_a = pluginConfig === null || pluginConfig === void 0 ? void 0 : pluginConfig.wbOrigin) !== null && _a !== void 0 ? _a : '*');\n        });\n    }\n    return {\n        get sigmaEnv() {\n            return pluginConfig.sigmaEnv;\n        },\n        get isScreenshot() {\n            return pluginConfig.screenshot;\n        },\n        config: {\n            // @ts-ignore\n            getKey(key) {\n                var _a;\n                return (_a = pluginConfig === null || pluginConfig === void 0 ? void 0 : pluginConfig.config) === null || _a === void 0 ? void 0 : _a[key];\n            },\n            get() {\n                return pluginConfig.config;\n            },\n            set(partialConfig) {\n                void execPromise('wb:plugin:config:update', partialConfig);\n            },\n            setKey(key, value) {\n                void execPromise('wb:plugin:config:update', {\n                    [key]: value,\n                });\n            },\n            subscribe(listener) {\n                on('config', listener);\n                return () => off('config', listener);\n            },\n            getVariable(configId) {\n                (0, error_1.validateConfigId)(configId, 'variable');\n                return subscribedWorkbookVars[configId];\n            },\n            setVariable(configId, ...values) {\n                (0, error_1.validateConfigId)(configId, 'variable');\n                void execPromise('wb:plugin:variable:set', configId, ...values);\n            },\n            getInteraction(configId) {\n                (0, error_1.validateConfigId)(configId, 'interaction');\n                return subscribedInteractions[configId];\n            },\n            setInteraction(configId, elementId, selection) {\n                (0, error_1.validateConfigId)(configId, 'interaction');\n                void execPromise('wb:plugin:selection:set', configId, elementId, selection);\n            },\n            triggerAction(configId) {\n                (0, error_1.validateConfigId)(configId, 'action-trigger');\n                void execPromise('wb:plugin:action-trigger:invoke', configId);\n            },\n            registerEffect(configId, effect) {\n                (0, error_1.validateConfigId)(configId, 'action-effect');\n                registeredEffects[configId] = effect;\n                return () => {\n                    delete registeredEffects[configId];\n                };\n            },\n            configureEditorPanel(options) {\n                void execPromise('wb:plugin:config:inspector', options);\n            },\n            setLoadingState(loadingState) {\n                void execPromise('wb:plugin:config:loading-state', loadingState);\n            },\n            subscribeToWorkbookVariable(configId, callback) {\n                (0, error_1.validateConfigId)(configId, 'variable');\n                const setValues = (values) => {\n                    callback(values[configId]);\n                };\n                on('wb:plugin:variable:update', setValues);\n                return () => {\n                    off('wb:plugin:variable:update', setValues);\n                };\n            },\n            subscribeToWorkbookInteraction(configId, callback) {\n                (0, error_1.validateConfigId)(configId, 'interaction');\n                const setValues = (values) => {\n                    callback(values[configId]);\n                };\n                on('wb:plugin:selection:update', setValues);\n                return () => {\n                    off('wb:plugin:selection:update', setValues);\n                };\n            },\n        },\n        elements: {\n            getElementColumns(configId) {\n                (0, error_1.validateConfigId)(configId, 'element');\n                return execPromise('wb:plugin:element:columns:get', configId);\n            },\n            subscribeToElementColumns(configId, callback) {\n                (0, error_1.validateConfigId)(configId, 'element');\n                const eventName = `wb:plugin:element:${configId}:columns`;\n                on(eventName, callback);\n                void execPromise('wb:plugin:element:subscribe:columns', configId);\n                return () => {\n                    off(eventName, callback);\n                    void execPromise('wb:plugin:element:unsubscribe:columns', configId);\n                };\n            },\n            subscribeToElementData(configId, callback) {\n                (0, error_1.validateConfigId)(configId, 'element');\n                const eventName = `wb:plugin:element:${configId}:data`;\n                on(eventName, callback);\n                void execPromise('wb:plugin:element:subscribe:data', configId);\n                return () => {\n                    off(eventName, callback);\n                    void execPromise('wb:plugin:element:unsubscribe:data', configId);\n                };\n            },\n            fetchMoreElementData(configId) {\n                (0, error_1.validateConfigId)(configId, 'element');\n                void execPromise('wb:plugin:element:fetch-more', configId);\n            },\n        },\n        destroy() {\n            Object.keys(listeners).forEach(event => delete listeners[event]);\n            window.removeEventListener('message', listener, false);\n        },\n    };\n}\nexports.initialize = initialize;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}